#include <iostream>
using namespace std;

// Function to display the current game board
void displayBoard(char board[3][3]) {
    cout << "Current board:\n";
    for (int i = 0; i < 3; ++i) {
        for (int j = 0; j < 3; ++j) {
            cout << board[i][j];
            if (j < 2) cout << " | ";
        }
        cout << "\n";
        if (i < 2) cout << "---------\n";
    }
}

// Function to check for a win or draw
char checkWin(char board[3][3]) {
    // Check rows and columns
    for (int i = 0; i < 3; ++i) {
        if (board[i][0] == board[i][1] && board[i][1] == board[i][2])
            return board[i][0];
        if (board[0][i] == board[1][i] && board[1][i] == board[2][i])
            return board[0][i];
    }
    // Check diagonals
    if (board[0][0] == board[1][1] && board[1][1] == board[2][2])
        return board[0][0];
    if (board[0][2] == board[1][1] && board[1][1] == board[2][0])
        return board[0][2];
    // Check for draw
    for (int i = 0; i < 3; ++i) {
        for (int j = 0; j < 3; ++j) {
            if (board[i][j] != 'X' && board[i][j] != 'O')
                return ' ';
        }
    }
    return 'D'; // Draw
}

// Function to handle player moves
bool makeMove(char board[3][3], int row, int col, char player) {
    if (row < 0 || row >= 3 || col < 0 || col >= 3 || board[row][col] == 'X' || board[row][col] == 'O') {
        return false;
    }
    board[row][col] = player;
    return true;
}

//Driver Code
int main() {
    //Board of tic tac toe
    char board[3][3] = {
        {'1', '2', '3'},
        {'4', '5', '6'},
        {'7', '8', '9'}
    };
    char currentPlayer = 'X';
    char winner = ' ';
    int move;

    while (winner == ' ') {
        displayBoard(board);//function call
        cout << "Player " << currentPlayer << ", enter your move (1-9): ";
        cin >> move;//input move
        int row = (move - 1) / 3;
        int col = (move - 1) % 3;
        
        //for wrong input
        if (!makeMove(board, row, col, currentPlayer)) {
            cout << "Invalid move. Try again.\n";
            continue;
        }
        //for winning move
        winner = checkWin(board);
        if (winner == ' ') {
            currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
        }
    }

    displayBoard(board);//function call
    
    //check for Draw
    if (winner == 'D') {
        cout << "It's a Draw!\n";
    } else {
        cout << "Player " << winner << " wins!\n";
    }

    return 0;
}